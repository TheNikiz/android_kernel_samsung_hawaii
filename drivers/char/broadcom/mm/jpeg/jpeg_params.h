/*******************************************************************************
  Copyright 2010 Broadcom Corporation.  All rights reserved.

  Unless you and Broadcom execute a separate written software license agreement
  governing use of this software ,  this software is licensed to you under the
  terms of the GNU General Public License version 2 ,  available at
http://www.gnu.org/copyleft/gpl.html (the "GPL").

Notwithstanding the above , under no circumstances may you combine this software
in any way with any other Broadcom software provided under a license other than
the GPL ,  without Broadcom's express prior written consent.
*******************************************************************************/
#ifndef _JPEG_PARAMS_H_
#define _JPEG_PARAMS_H_
#define JPEG_DEV_NAME	"mm_jpeg"

uint32_t hw_quantf_t_Y[64] = {36 , 41 , 43 , 31 , 24 , 19 , 21 , 35 , 36 , 26 ,
23 , 19 , 16 , 9 , 13 , 28 , 32 , 25 , 21 , 15 , 11 , 10 , 12 , 29 , 36 , 20 ,
17 , 14 , 9 , 7 , 11 , 29 , 34 , 19 , 12 , 9 , 8 , 6 , 10 , 28 , 31 , 15 , 10 ,
10 , 9 , 9 , 12 , 29 , 22 , 12 , 10 , 10 , 10 , 11 , 16 , 39 , 29 , 16 , 17 , 18
, 19 , 27 , 38 , 79};

uint32_t hw_quantf_t_C[64] = {34 , 24 , 18 , 10 , 6 , 7 , 11 , 21 , 24 , 14 ,
12 , 5 , 4 , 5 , 8 , 15 , 18 , 12 , 6 , 3 , 4 , 5 , 8 , 16 , 10 , 5 , 3 , 4 ,
5 , 6 , 9 , 18 , 6 , 4 , 4 , 5 , 6 , 7 , 11 , 21 , 7 , 5 , 5 , 6 , 7 , 9 , 14 ,
27 , 11 , 8 , 8 , 9 , 11 , 14 , 20 , 40 , 21 , 15 , 16 , 18 , 21 , 27 , 40 ,
79};

#define JQADDR_RAMACC	(1 << 31)
#define JCTRL_START	(1 << 7)
#define JCTRL_WOUT	(1 << 6)
#define JCTRL_DCTEN	(1 << 4)
#define JCTRL_RESET	(1 << 3)
#define JCTRL_FLUSH	(1 << 2)
#define JCTRL_STUFF	(1 << 1)
#define JCTRL_MODE	(1 << 0)
#define JHADDR_TABLEF	(1 << 31)
#define JICST_ERR	(1 << 19)
#define JICST_MARKER	(1 << 18)
#define JICST_SDONE	(1 << 17)
#define JICST_CDONE	(1 << 16)
#define JICST_INTE	(1 <<  3)
#define JICST_INTM	(1 <<  2)
#define JICST_INTSD	(1 <<  1)
#define JICST_INTCD	(1 <<  0)
#define JDCCTRL_DISDC	(1 << 20)
#define JDCCTRL_SETDC(n)	(1 << ((n) + 16))
#define JDCCTRL_DCCOMP_MASK	0xFFFF
#define JMCTRL_DC_TAB(n)	(1 << (2*(n)))
#define JMCTRL_AC_TAB(n)	(1 << (2*(n)+1))
#define JMCTRL_NUMCMP	(1 << 8)
#define JMCTRL_CMP(n)	(1 << (4*(n) + 16))
#define JMCTRL_420_MODE	(0 << 14)
#define JMCTRL_422_MODE	(1 << 14)
#define JMCTRL_444_MODE	(2 << 14)
#define JMCTRL_UNUSED_BITS  ((1 << 13) | (1 << 12) | (1 << 11))
/*The Hardcoded values in the array and the corresponding
1.offset=0x200	tablesize=0x10
2.offset=0x0		tablesize=0x100
3.offset=0x210	tablesize=0x10
4.offset=0x100	tablesize=0x100*/


const uint16_t huffcode_Y_DC[16] = {
0 , 2 , 3 , 4 , 5 , 6 , 14 , 30 , 62 , 126 , 254 , 510 , 21845 , 21845 , 21845 ,
21845 };



const uint8_t huffsize_Y_DC[16] = {1 , 2 , 2 , 2 , 2 , 2 , 3 , 4 , 5 , 6 , 7 ,
8 , 255 , 255 , 255 , 255};

const uint16_t huffcode_Y_AC[256] = {
10 , 0 , 1 , 4 , 11 , 26 , 120 , 248 , 1014 , 65410 , 65411 , 21845 , 21845 ,
21845 , 21845 , 21845 , 21845 , 12 , 27 , 121 , 502 , 2038 , 65412 , 65413 ,
65414 , 65415 , 65416 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 28 ,
249 , 1015 , 4084 , 65417 , 65418 , 65419 , 65420 , 65421 , 65422 , 21845 ,
21845 , 21845 , 21845 , 21845 , 21845 , 58 , 503 , 4085 , 65423 , 65424 ,
65425 , 65426 , 65427 , 65428 , 65429 , 21845 , 21845 , 21845 , 21845 , 21845 ,
21845 , 59 , 1016 , 65430 , 65431 , 65432 , 65433 , 65434 , 65435 , 65436 ,
65437 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 122 , 2039 , 65438 ,
65439 , 65440 , 65441 , 65442 , 65443 , 65444 , 65445 , 21845 , 21845 , 21845 ,
21845 , 21845 , 21845 , 123 , 4086 , 65446 , 65447 , 65448 , 65449 , 65450 ,
65451 , 65452 , 65453 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 250 ,
4087 , 65454 , 65455 , 65456 , 65457 , 65458 , 65459 , 65460 , 65461 , 21845 ,
21845 , 21845 , 21845 , 21845 , 21845 , 504 , 32704 , 65462 , 65463 , 65464 ,
65465 , 65466 , 65467 , 65468 , 65469 , 21845 , 21845 , 21845 , 21845 , 21845 ,
21845 , 505 , 65470 , 65471 , 65472 , 65473 , 65474 , 65475 , 65476 , 65477 ,
65478 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 506 , 65479 , 65480 ,
65481 , 65482 , 65483 , 65484 , 65485 , 65486 , 65487 , 21845 , 21845 , 21845 ,
21845 , 21845 , 21845 , 1017 , 65488 , 65489 , 65490 , 65491 , 65492 , 65493 ,
65494 , 65495 , 65496 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 1018 ,
65497 , 65498 , 65499 , 65500 , 65501 , 65502 , 65503 , 65504 , 65505 , 21845 ,
21845 , 21845 , 21845 , 21845 , 21845 , 2040 , 65506 , 65507 , 65508 , 65509 ,
65510 , 65511 , 65512 , 65513 , 65514 , 21845 , 21845 , 21845 , 21845 , 21845 ,
21845 , 65515 , 65516 , 65517 , 65518 , 65519 , 65520 , 65521 , 65522 , 65523 ,
65524 , 21845 , 21845 , 21845 , 21845 , 21845 , 2041 , 65525 , 65526 , 65527 ,
65528 , 65529 , 65530 , 65531 , 65532 , 65533 , 65534 , 21845 , 21845 , 21845 ,
21845 , 21845};

const uint8_t huffsize_Y_AC[256] = {
3 , 1 , 1 , 2 , 3 , 4 , 6 , 7 , 9 , 15 , 15 , 255 , 255 , 255 , 255 , 255 ,
255 , 3 , 4 , 6 , 8 , 10 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 ,
255 , 255 , 4 , 7 , 9 , 11 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 ,
255 , 255 , 255 , 5 , 8 , 11 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 ,
255 , 255 , 255 , 255 , 5 , 9 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 ,
255 , 255 , 255 , 255 , 255 , 6 , 10 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 ,
255 , 255 , 255 , 255 , 255 , 255 , 6 , 11 , 15 , 15 , 15 , 15 , 15 , 15 , 15 ,
15 , 255 , 255 , 255 , 255 , 255 , 255 , 7 , 11 , 15 , 15 , 15 , 15 , 15 , 15 ,
15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 8 , 14 , 15 , 15 , 15 , 15 , 15 ,
15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 8 , 15 , 15 , 15 , 15 , 15 ,
15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 8 , 15 , 15 , 15 , 15 ,
15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 9 , 15 , 15 , 15 ,
15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 9 , 15 , 15 ,
15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 10 , 15 ,
15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 15 ,
15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 10 ,
15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255};

const uint16_t huffcode_C_DC[16] = {
0 , 1 , 2 , 6 , 14 , 30 , 62 , 126 , 254 , 510 , 1022 , 2046 , 21845 , 21845 ,
21845 , 21845};

const uint8_t huffsize_C_DC[16] = {
1 , 1 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 255 , 255 , 255 , 255};

const uint16_t huffcode_C_AC[256] = {
0 , 1 , 4 , 10 , 24 , 25 , 56 , 120 , 500 , 1014 , 4084 , 21845 , 21845 ,
21845 , 21845 , 21845 , 21845 , 11 , 57 , 246 , 501 , 2038 , 4085 , 65416 ,
65417 , 65418 , 65419 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 26 ,
247 , 1015 , 4086 , 32706 , 65420 , 65421 , 65422 , 65423 , 65424 , 21845 ,
21845 , 21845 , 21845 , 21845 , 21845 , 27 , 248 , 1016 , 4087 , 65425 , 65426 ,
65427 , 65428 , 65429 , 65430 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 ,
58 , 502 , 65431 , 65432 , 65433 , 65434 , 65435 , 65436 , 65437 , 65438 ,
21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 59 , 1017 , 65439 , 65440 ,
65441 , 65442 , 65443 , 65444 , 65445 , 65446 , 21845 , 21845 , 21845 , 21845 ,
21845 , 21845 , 121 , 2039 , 65447 , 65448 , 65449 , 65450 , 65451 , 65452 ,
65453 , 65454 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 122 , 2040 ,
65455 , 65456 , 65457 , 65458 , 65459 , 65460 , 65461 , 65462 , 21845 , 21845 ,
21845 , 21845 , 21845 , 21845 , 249 , 65463 , 65464 , 65465 , 65466 ,
65467 , 65468 , 65469 , 65470 , 65471 , 21845 , 21845 , 21845 , 21845 , 21845 ,
21845 , 503 , 65472 , 65473 , 65474 , 65475 , 65476 , 65477 , 65478 , 65479 ,
65480 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 504 , 65481 , 65482 ,
65483 , 65484 , 65485 , 65486 , 65487 , 65488 , 65489 , 21845 , 21845 , 21845 ,
21845 , 21845 , 21845 , 505 , 65490 , 65491 , 65492 , 65493 , 65494 , 65495 ,
65496 , 65497 , 65498 , 21845 , 21845 , 21845 , 21845 , 21845 , 21845 , 506 ,
65499 , 65500 , 65501 , 65502 , 65503 , 65504 , 65505 , 65506 , 65507 , 21845 ,
21845 , 21845 , 21845 , 21845 , 21845 , 2041 , 65508 , 65509 , 65510 , 65511 ,
65512 , 65513 , 65514 , 65515 , 65516 , 21845 , 21845 , 21845 , 21845 , 21845 ,
21845 , 16352 , 65517 , 65518 , 65519 , 65520 , 65521 , 65522 , 65523 , 65524 ,
65525 , 21845 , 21845 , 21845 , 21845 , 21845 , 1018 , 32707 , 65526 , 65527 ,
65528 , 65529 , 65530 , 65531 , 65532 , 65533 , 65534 , 21845 , 21845 , 21845 ,
21845 , 21845};

const uint8_t huffsize_C_AC[256] = {
1 , 1 , 2 , 3 , 4 , 4 , 5 , 6 , 8 , 9 , 11 , 255 , 255 , 255 , 255 , 255 , 255 ,
3 , 5 , 7 , 8 , 10 , 11 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 ,
255 , 4 , 7 , 9 , 11 , 14 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 ,
255 , 255 , 4 , 7 , 9 , 11 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 ,
255 , 255 , 255 , 5 , 8 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 ,
255 , 255 , 255 , 255 , 5 , 9 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 ,
255 , 255 , 255 , 255 , 255 , 6 , 10 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 ,
255 , 255 , 255 , 255 , 255 , 255 , 6 , 10 , 15 , 15 , 15 , 15 , 15 , 15 , 15 ,
15 , 255 , 255 , 255 , 255 , 255 , 255 , 7 , 15 , 15 , 15 , 15 , 15 , 15 , 15 ,
15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 8 , 15 , 15 , 15 , 15 , 15 , 15 ,
15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 8 , 15 , 15 , 15 , 15 , 15 ,
15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 8 , 15 , 15 , 15 , 15 ,
15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 8 , 15 , 15 , 15 ,
15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 10 , 15 , 15 ,
15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 255 , 13 , 15 ,
15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255 , 9 , 14 ,
15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 15 , 255 , 255 , 255 , 255 , 255};

#endif /*_JPEG_PARAMS_H_*/
